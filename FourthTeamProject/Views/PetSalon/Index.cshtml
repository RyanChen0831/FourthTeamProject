<link href="~/css/saloncss/style.css" rel="stylesheet" />

<div id="app" class="container">
    @*<-----------新增與編輯美容項目-------------->*@
    <nav class="navbar navbar-expand-lg bg-white navbar-light shadow-sm py-3 py-lg-0 px-3 px-lg-0">
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <div class="navbar-nav ms-auto py-0">
                <buttor class="nav-item nav-link" v-if="ButtonPage == 'SalonSolutionButton'" @@click="SalonSolutionPage">編輯美容服務</buttor>
                <buttor class="nav-item nav-link" v-else="ButtonPage == 'SalonButton'" @@click="SalonPage">編輯美容項目</buttor>
                <buttor class="nav-item nav-link" @@click="CteateSalon">新增美容項目</buttor>
            </div>
        </div>
    </nav>
    
    @*<-----------編輯美容服務頁面-------------->*@
    <div class="form-group" v-if="CurrentPage == 'SalonSolution'">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>編輯</th>
                    <th>美容服務</th>
                    <th>美容內容</th>
                    <th>價格</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in SalonSolutionDTO">
                    <template v-if="item.editSalonSolution == true">
                        <td>
                            <button class="btn btn-success" @@click="UpdateSalonSolution(item)">確定修改</button>
                            <button class="btn btn-warning" @@click="CancelSalonSolution">取消修改</button>
                        </td>
                        <td><input type="text" v-model="item.salonSolutionName" /></td>
                        <td>
                            <textarea type="text" style="width:350px; height:100px;" v-model="item.salonSolutionDiscription">{{item.salonSolutionDiscription}}</textarea>
                        </td>
                        <td><input type="number" v-model="item.salonSolutionPrice" /></td>
                    </template>
                    <template v-else>
                        <td>
                            <button class="btn btn-primary" @@click="EditSalonSolution(item.salonSolutionId)">編輯美容類型</button>
                        </td>
                        <td>{{item.salonSolutionName}}</td>
                        <td>{{item.salonSolutionDiscription}}</td>
                        <td>{{item.salonSolutionPrice}}</td>
                    </template>
                </tr>
            </tbody>
        </table>
    </div>

    @*<-----------編輯美容項目頁面-------------->*@
    <div class="form-group" v-else="CurrentPage == 'Salon'">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>編輯</th>
                    <th>寵物種類</th>
                    <th>美容項目</th>
                    <th>美容圖片</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in SalonDTO">
                    <template v-if="item.editSalon == true">
                        <td>
                            <button class="btn btn-success" @@click="Updatesalon(item)">確定修改</button>
                            <button class="btn btn-warning" @@click="Cancelsalon">取消修改</button>
                            <input type="file" @@change="Onfile" accept="image/*" />
                        </td>
                        <td><input v-model="item.salonCatagoryName" /></td>
                        <td><input v-model="item.salonName" /></td>
                        <td><img style="width:200px;height:200px" :src="imageUrl" /></td>
                    </template>
                    <template v-else>
                        <td>
                            <button class="btn btn-primary" @@click="Editsalon(item.salonId)">編輯</button>
                            <button class="btn btn-danger" @@click="Deletesalon(item.salonId)">刪除</button>
                        </td>
                        <td>{{item.salonCatagoryName}}</td>
                        <td>{{item.salonName}}</td>
                        <td>
                            <img style="width:200px;height:200px" :src="GetImageUrl(item.salonImagePath)" />
                        </td>
                    </template>
                </tr>
            </tbody>
        </table>
    </div>

    @*<----------------互動視窗----------------->*@


    @*<----------------新增美容服務項目----------------->*@
    <div class="form-group">
        <div class="modal fade" id="addSalon" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitleId">新增美容項目</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="form-group">
                            <label class="form-label">美容服務</label>
                            <select class="form-control mr-1">
                                <option value="0" disabled selected>--請選擇--</option>
                                <option v-for="item in SalonDTO" :key="item.salonSolutionId">{{ item.salonSolutionName }}</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">寵物種類</label>
                            <select class="form-control mr-1">
                                <option value="0" disabled selected>--請選擇--</option>
                                <option v-for="item in SalonDTO" :key="item.salonCatagoryId">{{ item.salonCatagoryName }}</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">美容項目</label>
                            <input class="form-control" v-model="salonName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">圖片</label>
                            <input class="form-control" v-model="salonImagePath" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="InsertSalon">新增</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>

    <script>
        let app = new Vue({
            el: "#app",
            data: {
                SalonSolutionDTO: [],
                SalonDTO: [],
                CurrentPage:"",
                ButtonPage:"",
                SalonSolutionIdOld:"",
                SalonSolutionNameOld: "",
                SalonSolutionDiscriptionOld: "",
                SalonSolutionPriceOld: "",

                SalonSolutionSalonId:"",
                SalonSolutionName:"",
                SalonSolutionDiscription:"",
                SalonSolutionPrice:"",

                SalonId:"",
                SalonCatagoryName:"",
                SalonName:"",
                SalonImagePath:"",

                SalonIdOld:"",
                SalonCatagoryNameOld:"",
                SalonNameOld:"",
                SalonImagePathOld:"",


                salonName:"",
                salonImagePath:null,

                selectedFile: null,
                originalImageUrl: null,
                imageUrl:null,
            },
            mounted: function () {
                let _this = this;
                _this.SalonSolutionPage();
            },
            methods: {
                FilterSalonSolutionDTO: function () {
                    let _this = this;
                    axios.get(`/api/PetSalon/GetSalonSolution`).then(response => _this.SalonSolutionDTO = response.data)
                },
                SalonSolutionPage: function () {
                    let _this = this;
                    _this.ButtonPage = 'SalonButton';
                    _this.CurrentPage = 'SalonSolution';
                    _this.FilterSalonSolutionDTO();
                },
                SalonPage:function(){
                    let _this = this;
                    _this.ButtonPage = 'SalonSolutionButton';
                    _this.CurrentPage = 'Salon';
                    axios.get(`/api/PetSalon/GetSalon`).then(response => _this.SalonDTO = response.data)
                },

                EditSalonSolution: function (SalonSolutionId) {
                    let _this = this;
                    var SalonSolutionList = [];
                    var reslt
                    for (var i = 0; i < _this.SalonSolutionDTO.length; i++) {
                        var item = _this.SalonSolutionDTO[i];
                        if (SalonSolutionId == item.salonSolutionId) {
                            item.editSalonSolution = true;
                            _this.SalonSolutionNameOld = item.salonSolutionName;
                            _this.SalonSolutionDiscriptionOld = item.salonSolutionDiscription;
                            _this.SalonSolutionPriceOld = item.salonSolutionPrice
                        }
                        SalonSolutionList.push(item);

                    }
                    _this.SalonSolutionDTO = SalonSolutionList;
                },
                UpdateSalonSolution: function (item) {
                    let _this = this;
                    var request = {
                        SalonSolutionId: item.salonSolutionId,
                        SalonSolutionName: item.salonSolutionName,
                        SalonSolutionDiscription: item.salonSolutionDiscription,
                        SalonSolutionPrice: item.salonSolutionPrice
                    };
                    axios.put(`/api/PetSalon/PutSalonSolution/${item.salonSolutionId}`, request).then(response => {
                        alert(response.data);
                        _this.CancelSalonSolution();
                        _this.SalonSolutionPage();
                    });
                },
                CancelSalonSolution: function () {
                    let _this = this;
                    var SalonSolutionList = [];
                    for (var i = 0; i < _this.SalonSolutionDTO.length; i++) {
                        var item = _this.SalonSolutionDTO[i];
                        if (item.editSalonSolution == true) {
                            item.editSalonSolution = false;
                            _this.SalonSolutionIdOld = item.salonSolutionName;
                            _this.SalonSolutionNameOld = item.salonSolutionName;
                            _this.SalonSolutionDiscriptionOld = item.salonSolutionDiscription;
                            _this.SalonSolutionPriceOld = item.salonSolutionPrice;
                        }
                        SalonSolutionList.push(item);
                    }
                    _this.SalonSolutionDTO = SalonSolutionList;
                },

                Editsalon: function (SalonId) {
                    let _this = this;
                    var SalonList = [];
                    for (var i = 0; i < _this.SalonDTO.length; i++) {
                        var item = _this.SalonDTO[i];
                        if (SalonId == item.salonId) {
                            item.editSalon = true;
                            _this.SalonId = item.salonId;
                            _this.SalonCatagoryName = item.salonCatagoryName;
                            _this.SalonName = item.salonName;
                            _this.SalonImagePath = item.salonImagePath;
                            _this.imageUrl = _this.GetImageUrl(item.salonImagePath);
                        }
                        SalonList.push(item);
                    }
                    _this.SalonDTO = SalonList;
                },
                Cancelsalon: function () {
                    let _this = this;
                    var SalonList = [];
                    for (var i = 0; i < _this.SalonDTO.length; i++) {
                        var item = _this.SalonDTO[i];
                        if (item.editSalon == true) {
                            item.editSalon = false;
                            _this.SalonIdOld = item.SalonId
                            _this.SalonCatagoryNameOld = item.salonCatagoryName;
                            _this.SalonNameOld = item.salonName;
                            _this.SalonImagePathOld = item.salonImagePath;
                            _this.imageUrl = _this.GetImageUrl(item.salonImagePath);
                        }
                        SalonList.push(item);
                    }
                    _this.SalonDTO = SalonList;
                },
                Onfile: function (e) {
                    let _this = this;
                    const newFile = e.target.files[0];
                    if (newFile) {
                        _this.selectedFile = newFile;
                        const reader = new FileReader();
                        reader.onload = (event) => {
                            _this.imageUrl = event.target.result;
                        };
                        reader.readAsDataURL(newFile);
                    } else {
                        _this.imageUrl = _this.originalImageUrl;
                        _this.selectedFile = null;
                    }
                },
                Updatesalon: function (item) {
                    let _this = this;
                    var data = new FormData();
                    data.append("SalonImagePath", _this.selectedFile);
                    axios.post(`/api/PetSalon/UploadImage/${item.salonId}`, data)
                        .then(response => {
                            alert(response.data);
                            _this.SalonPage();
                        });
                },
                GetImageUrl: function (salonId) {
                    return `data:image/jpg;base64,${salonId}`;
                },

                CteateSalon: function () {
                    axios.post(`/api/PetSalon/GetAddSalon`).then(response => _this.SalonDTO = response.data);
                    $("#addSalon").modal('show');
                },
                InsertSalon: function () {
                    let _this = this;
                    var InsertDTO = {
                        SalonSolutionSalonId: 0,
                        SalonSolutionName: _this.salonSolutionName,
                        SalonSolutionDiscription: _this.salonSolutionDiscription,
                        SalonSolutionPrice: _this.salonSolutionPrice
                    };
                    axios.post(`/api/PetSalon/CteateSalon`, InsertDTO).then(response => {
                        alert(response.data);
                        $("#addSalon").modal("hide");
                        _this.SalonPage();
                    });
                },
            }
        })
    </script>
}
