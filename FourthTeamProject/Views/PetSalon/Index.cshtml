@*<div class="text-center">
    <a href="/Home/FB" class="btn btn-primary">FB</a>
    <h1 class="display-4">WELCOME</h1>
    <p>ABOUT<a href="https://learn.microsoft.com/zh-tw/aspnet/core/security/authentication/social/facebook-logins?view=aspnetcore-7.0">ASP.NET</a>.</p>
</div>*@


<div id="app" class="container">
    <div class="form-group">
        @*<-----------新增美容服務-------------->*@
        <button type="button" @@click="CteateSalonSolution" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#modalId">
            新增美容類型
        </button>

        <button type="button" @@click="CteateSalon" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#modalId">
            新增美容項目
        </button>
    </div>

    <div class="form-group">
        @*<-----------編輯美容服務-------------->*@
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>編輯</th>
                    <th>美容服務</th>
                    <th>美容內容</th>
                    <th>價格</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in SalonSolutionDTO">
                    <template v-if="item.editSalonSolution == true">
                        <td>
                            <button class="btn btn-success" @@click="updateSalonSolution(item)">確定修改</button>
                            <button class="btn btn-warning" @@click="cancelSalonSolution">取消修改</button>
                        </td>
                        <td><input v-model="item.salonSolutionName" /></td>
                        <td><input v-model="item.salonSolutionDiscription" /></td>
                        <td><input v-model="item.salonSolutionPrice" /></td>
                    </template>
                    <template v-else>
                        <td>
                            <button class="btn btn-primary" @@click="editSalonSolution(item.salonSolutionId)">編輯美容類型</button>
                            <button class="btn btn-primary" @@click="editSalon(item.salonSolutionId)">編輯美容項目</button>
                        </td>
                        <td>{{item.salonSolutionName}}</td>
                        <td>{{item.salonSolutionDiscription}}</td>
                        <td>{{item.salonSolutionPrice}}</td>
                    </template>
                </tr>

            </tbody>
        </table>
    </div>


    @*<----------------互動視窗----------------->*@

    <div class="form-group">
        @*<----------------新增美容服務類型----------------->*@
        <div class="modal fade" id="addSalonSolution" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitleId">美容服務</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label class="form-label">美容類型</label>
                            <input class="form-control" v-model="salonSolutionName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">美容內容</label>
                            <input class="form-control" v-model="salonSolutionDiscription" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">價格</label>
                            <input class="form-control" v-model="salonSolutionPrice" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="InsertSalonSolution">新增</button>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        @*<----------------新增美容服務項目----------------->*@
        <div class="modal fade" id="addSalon" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitleId">美容項目</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="form-group">
                            <label class="form-label">寵物種類</label>
                            <input class="form-control" v-model="salonCatagoryName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">美容項目</label>
                            <input class="form-control" v-model="salonName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">圖片</label>
                            <input class="form-control" v-model="salonImagePath" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="InsertSalon">新增</button>
                    </div>
                </div>
            </div>
        </div>

    </div>


    <div class="form-group">
        @*<----------------編輯美容服務項目----------------->*@
        <div class="modal fade" id="editSalon" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitleId">美容項目</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="form-group">
                            <label class="form-label">寵物種類</label>
                            <input class="form-control" v-model="salonCatagoryName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">美容項目</label>
                            <input class="form-control" v-model="salonName" />
                        </div>
                        <div class="form-group">
                            <label class="form-label">圖片</label>
                            <input class="form-control" v-model="salonImagePath" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                        <button type="button" class="btn btn-primary" @@click="InsertSalon">新增</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>


<script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>

<script>
    let app = new Vue({
        el: "#app",
        data: {
            Filter: "",
            SalonSolutionDTO: [],
            SalonDTO:[],
            SalonSolutionIdOld: "",
            SalonSolutionNameOld: "",
            SalonSolutionDiscriptionOld: "",
            SalonSolutionPriceOld: "",
            SalonCatagoryNameOld: "",
            SalonNameOld: "",
            SalonImagePathOld: "",


            salonSolutionName: "",
            salonSolutionDiscription: "",
            salonSolutionPrice: "",

            salonCatagoryName: "",
            salonName: "",
            salonImagePath: "",


            selectedFile: null,
            imageUrl: null,
        },
        mounted: function () {
            let _this = this;
            axios.get(`/api/PetSalon/GetSalonSolution`).then(response => _this.SalonSolutionDTO = response.data)
        },
        methods: {
            FilterSalonSolutionDTO: function () {
                let _this = this;
                axios.get(`/api/PetSalon/GetSalonSolution`).then(response => _this.SalonSolutionDTO = response.data)
            },
            editSalonSolution: function (SalonSolutionId) {
                let _this = this;
                var SalonList = [];
                var reslt
                for (var i = 0; i < _this.SalonSolutionDTO.length; i++) {
                    var item = _this.SalonSolutionDTO[i];
                    if (SalonSolutionId == item.salonSolutionId) {
                        item.editSalonSolution = true;
                        _this.SalonSolutionNameold = item.salonSolutionName;
                        _this.SalonSolutionDiscriptionold = item.salonSolutionDiscription;
                        _this.SalonSolutionPriceold = item.salonSolutionPrice
                    }
                    SalonList.push(item);

                }
                _this.SalonSolutionDTO = SalonList;
            },

            updateSalonSolution: function (item) {
                let _this = this;
                var request = {
                    SalonSolutionId: item.salonSolutionId,
                    SalonSolutionName: item.salonSolutionName,
                    SalonSolutionDiscription: item.salonSolutionDiscription,
                    SalonSolutionPrice: item.salonSolutionPrice
                };
                axios.put(`/api/PetSalon/PutSalonSolution/${item.salonSolutionId}`, request).then(response => {
                    alert(response.data);
                    _this.cancelSalonSolution();
                    _this.FilterSalonSolutionDTO();
                });
            },
            CteateSalonSolution: function () {
                $("#addSalonSolution").modal('show');
            },

            editSalon: function (SalonSolutionId) {
                let _this = this;
                var salonList = [];
                for (var i = 0; i < _this.SalonSolutionDTO.length; i++) {
                    var item = _this.SalonSolutionDTO[i];
                    if (SalonSolutionId == item.salonSolutionId) {
                        _this.SalonSolutionIdOld = item.salonSolutionId;
                    }
                salonList.push(item);
                }
                alert(JSON.stringify(salonList));
                axios.post(`/api/PetSalon/GetSalon/${item.salonSolutionId}`, salonList).then(response => _this.SalonDTO = response.data)
              //  $("#editSalon").modal('show');


                },


                cancelSalonSolution: function () {
                    let _this = this;
                    var SalonList = [];
                    for (var i = 0; i < _this.SalonSolutionDTO.length; i++) {
                        var item = _this.SalonSolutionDTO[i];
                        if (item.editSalonSolution == true) {
                            item.editSalonSolution = false;
                            _this.SalonSolutionNameOld = item.salonSolutionName;
                            _this.SalonSolutionDiscriptionOld = item.salonSolutionDiscription;
                            _this.SalonSolutionPriceOld = item.salonSolutionPrice;
                        }
                        SalonList.push(item);
                    }
                    _this.SalonSolutionDTO = SalonList;
                },

                onfile: function (e) {
                    let _this = this;
                    _this.selectedFile = e.target.files[0];
                    _this.preview();
                },
                preview: function () {
                    let _this = this;
                    if (_this.selectedFile) {
                        const reader = new FileReader();
                        reader.onload = (event) => {
                            _this.imageUrl = event.target.result;
                        };
                        reader.readAsDataURL(_this.selectedFile);
                    } else {
                        _this.imageUrl = null;
                    }
                },

                //update: function (item) {
                //    let _this = this;

                //    const data = {
                //        SalonId: item.salonId,
                //        SalonCatagoryName: item.salonCatagoryName,
                //        SalonName: item.salonName,
                //    };

                //    axios.put(`/api/PetSalon/UploadImage/${item.salonId}`, data).then(res => {
                //        alert(response.data);
                //        _this.cancel();
                //        _this.FilterSalonSolutionDTO();
                //    });
                //},
                CteateSalonSolution: function() {
                    $("#addSalonSolution").modal('show');
                },
                CteateSalon: function() {
                    $("#addSalon").modal('show');
                },
                InsertSalonSolution: function () {
                    let _this = this;
                    var SalonSolutionDTO = {
                        SalonSolutionSalonId: 0,
                        SalonSolutionName: _this.salonSolutionName,
                        SalonSolutionDiscription: _this.salonSolutionDiscription,
                        SalonSolutionPrice: _this.salonSolutionPrice
                    };
                    axios.post(`/api/PetSalon/CteateSalonSolution`, SalonSolutionDTO).then(response => {
                        alert(response.data);
                        $("#addSalonSolution").modal("hide");
                        _this.SalonSolutionDTO();
                    });
                },
                InsertSalon: function () {
                    let _this = this;
                    var SalonDTO = {
                        SalonSolutionSalonId: 0,
                        SalonSolutionName: _this.salonSolutionName,
                        SalonSolutionDiscription: _this.salonSolutionDiscription,
                        SalonSolutionPrice: _this.salonSolutionPrice
                    };
                    axios.post(`/api/PetSalon/CteateSalon`, SalonDTO).then(response => {
                        alert(response.data);
                        $("#addSalon").modal("hide");
                        _this.SalonSolutionDTO();
                    });
                },
            }
        })
</script>
