@section  Styles{

    <style>
        .td-Width {
            width: 150px;
        }

        .card {
            margin-bottom: 10px;
        }

        .error-message{color:red}
    </style>

}


<header class="bg-dark text-white py-3">
    <h2 class="text-center font-weight-bold">美容訂單確認</h2>
</header>

<div id="app" class="container mt-4">
    <div class="row">
        <div class="col-md-10">
            <table class="table" style="text-align:center">
                <thead>
                    <tr>
                        <th>美容服務</th>
                        <th>服務介紹</th>
                        <th>價格</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="SalonItem in SalonSolutionOrder" :key="SalonItem.salonSolutionName">
                        <template>
                            <td class="h4">{{SalonItem.salonSolutionName}}</td>
                            <td class="h4">{{SalonItem.salonSolutionDiscription}}</td>
                            <td class="h4">{{SalonItem.salonSolutionPrice}}</td>
                        </template>
                    </tr>
                </tbody>
            </table>
            <form>
                <div class="mt-4">
                    <h4>訂購人資料</h4>
                    <div class="form-group">
                        <label for="name">姓名：</label>
                        <div v-if="validations.name.isValid" class="error-message">{{ validations.name.errorMessage }}</div>
                        <input type="text" class="form-control" id="name" name="name" v-model="member.name" required>
                    </div>
                    <div class="form-group">
                        <label for="phone">連絡電話：</label>
                        <div v-if="validations.phone.isValid" class="error-message">{{ validations.phone.errorMessage }}</div>
                        <input type="tel" class="form-control" id="phone" name="phone" v-model="member.phone" required>
                    </div>
                    <div class="form-group">
                        <label for="address">信箱：</label>
                        <div v-if="validations.email.isValid" class="error-message">{{ validations.email.errorMessage }}</div>
                        <input type="email" class="form-control" id="Email" name="Email" v-model="member.email" required>
                    </div>
                    <div class="form-group">
                        <label for="address">寵物名子：</label>
                        <div v-if="validations.catagory.isValid" class="error-message">{{ validations.catagory.errorMessage }}</div>
                        <input type="text" class="form-control" id="CatagoryName" name="CatagoryName" v-model="salonCatagoryName" required>
                    </div>
                    <div class="form-group">
                        <label for="address">美容預約日期：</label>
                        <div v-if="validations.data.isValid" class="error-message">{{ validations.data.errorMessage }}</div>
                        <input type="date" v-model="orderDetailData" class="form-control custom-select" required>
                    </div>
                    <div class="form-group">
                        <label for="phone">發票類型：</label>
                        <div v-if="validations.invoice.isValid" class="error-message">{{ validations.invoice.errorMessage }}</div>
                        <select class="form-control" aria-label=".form-select-lg example" v-model="invoiceId" required>
                            <option v-for="item in invoiceType" :value="item.invoiceId">{{ item.invoiceName }}</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="phone">付款方式：</label>
                        <div v-if="validations.pay.isValid" class="error-message">{{ validations.pay.errorMessage }}</div>
                        <select class="form-control" aria-label=".form-select-lg example" v-model="payId" required>
                            <option v-for="item in paymentType" :value="item.payId">{{ item.payName }}</option>
                        </select>
                    </div>
                </div>
                <button class="btn btn-primary btn-block" :disabled="isSubmitting" @@click="sendOrder">送出訂單</button>
            </form>
        </div>
    </div>
</div>






<script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.2/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js" integrity="sha384-fbbOQedDUMZZ5KreZpsbe1LCZPVmfTnH7ois6mU1QK+m14rQ1l2bGBq41eYeM/fS" crossorigin="anonymous"></script>
<script>
    let app = new Vue({
        el: "#app",
        data: {
            member: [],
            SalonSolutionOrder: [],
            invoiceType: [],
            paymentType: [],
            salonCatagoryName: "",
            orderDetailData: "",
            payId: "",
            invoiceId: "",
            invoice: "",
            payment: "",
            isSubmitting: false,
            addForm: {
                MerchantID: '@ViewData["MerchantID"]'
                , MerchantOrderNo: '@ViewData["MerchantOrderNo"]'
                , ExpireDate: '@ViewData["ExpireDate"]'
                , ReturnURL: '@ViewData["ReturnURL"]'
                , CustomerURL: '@ViewData["CustomerURL"]'
                , NotifyURL: '@ViewData["NotifyURL"]'
                , ClientBackURL: '@ViewData["ClientBackURL"]'
            },
            validations: {
                name: { isValid: false, errorMessage: "請輸入姓名" },
                phone: { isValid: false, errorMessage: "請輸入電話" },
                email: { isValid: false, errorMessage: "請輸入信箱" },
                catagory: { isValid: false, errorMessage: "請輸入寵物姓名" },
                data: { isValid: false, errorMessage: "請選擇日期" },
                invoice: { isValid: false, errorMessage: "請選擇發票" },
                pay: { isValid: false, errorMessage: "請選擇付款方式" },
            },
        },
        mounted() {
            let _this = this;
            const urlParams = new URLSearchParams(window.location.search);
            const urlmemberdata = urlParams.get("member");
            const urlorderdata = urlParams.get("orderData");
            const memberdata = JSON.parse(decodeURIComponent(urlmemberdata));
            const orderdata = JSON.parse(decodeURIComponent(urlorderdata));
            console.log(memberdata);
            console.log(orderdata);
            _this.member = memberdata;
            _this.SalonSolutionOrder = orderdata;
            axios.post('/api/PetProdcutAPI/getInvoice').then(response => _this.invoiceType = response.data);
            axios.post('/api/PetProdcutAPI/getPayment').then(response => _this.paymentType = response.data);
        },
        methods: {
            sendOrder: function () {
                let _this = this;
                _this.validations = {
                    name: { isValid: false, errorMessage: "請輸入姓名" },
                    phone: { isValid: false, errorMessage: "請輸入電話" },
                    email: { isValid: false, errorMessage: "請輸入信箱" },
                    catagory: { isValid: false, errorMessage: "請輸入寵物姓名" },
                    data: { isValid: false, errorMessage: "預約日期不可小於今日" },
                    invoice: { isValid: false, errorMessage: "請選擇發票" },
                    pay: { isValid: false, errorMessage: "請選擇付款方式" },
                };

                if (_this.member.name === '') {
                    _this.validations.name.isValid = true;
                }

                if (_this.member.phone === '') {
                    _this.validations.phone.isValid = true;
                }

                if (_this.member.email === '') {
                    _this.validations.email.isValid = true;
                }

                if (_this.salonCatagoryName === '') {
                    _this.validations.catagory.isValid = true;
                }

                var today=new Date();
                var selectDate = new Date(_this.orderDetailData);
                if (selectDate < today) {
                    _this.validations.data.isValid = true;
                }

                if (selectDate < today || _this.orderDetailData === '') {
                    _this.validations.data.isValid = true;
                }

                if (_this.invoiceId === '') {
                    _this.validations.invoice.isValid = true;
                }

                if (_this.payId === '') {
                    _this.validations.pay.isValid = true;
                }

                if (Object.values(_this.validations).every(field => field.isValid === false)) {
                    _this.isSubmitting = true;
                // 組合表單資料
                var postData = {};
                postData['MerchantID'] = _this.addForm.MerchantID;
                postData['MerchantOrderNo'] = _this.addForm.MerchantOrderNo;
                postData['ItemDesc'] = _this.member.name + '-' + _this.SalonSolutionOrder[0].salonSolutionName;//付款人資訊。
                postData['Amt'] = _this.SalonSolutionOrder[0].salonSolutionPrice;//結帳金額
                postData['ExpireDate'] = _this.addForm.ExpireDate;
                postData['ReturnURL'] = _this.addForm.ReturnURL;
                postData['CustomerURL'] = _this.addForm.CustomerURL;
                postData['NotifyURL'] = _this.addForm.NotifyURL;
                postData['ClientBackURL'] = _this.addForm.ClientBackURL;
                postData['Email'] = _this.member.email;
                // 使用 jQuery Ajax 傳送至後端
                $.ajax({
                    url: '@Url.Content("~/Product/SendToNewebPay")',
                    method: 'POST',
                    dataType: 'json',
                    data: { inModel: postData, __RequestVerificationToken: $('@Html.AntiForgeryToken()').val() },
                    success: function (returnObj) {
                        // 呼叫藍新金流 API
                        const form = document.createElement('form');
                        form.method = 'post';
                        form.action = 'https://ccore.newebpay.com/MPG/mpg_gateway';//藍新金流驗證網址(測試環境)

                        for (const key in returnObj) {
                            if (returnObj.hasOwnProperty(key)) {
                                //將回傳的Json物件開頭轉為大寫
                                const fixedKey = key.charAt(0).toUpperCase() + key.slice(1);
                                const hiddenField = document.createElement('input');
                                hiddenField.type = 'hidden';
                                hiddenField.name = fixedKey;
                                hiddenField.value = returnObj[key];
                                form.appendChild(hiddenField);
                            }
                        }
                        var order = {
                            SalonOrderID: 0,
                            MemberId: _this.member.id,
                            PayId: _this.payId,
                            InvoiceId: _this.invoiceId,
                            OrderMemberName: _this.member.name,
                            OrderMemberPhone: _this.member.phone,
                            OrderMemberEmail: _this.member.email,
                        };
                        var Detail = {
                            SalonOrderDetailId: 0,
                            Appointment: _this.orderDetailData,
                            UnitPrice: _this.SalonSolutionOrder[0].salonSolutionPrice,
                            SalonCatagoryName: _this.salonCatagoryName,
                            SalonSolutionName: _this.SalonSolutionOrder[0].salonSolutionName,
                        };
                        axios.post(`/api/SalonClient/Getorder`, order);
                        axios.post(`/api/SalonClient/GetorderDetail`, Detail);
                        document.body.appendChild(form);
                        form.submit();
                        
                    },
                    error: function (err) {
                        alert(err.status + " " + err.statusText + '\n' + err.responseText);
                        _this.isSubmitting = false;
                    }
                    
                })}
            },

        }
    });
</script>

