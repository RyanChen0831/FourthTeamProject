@section Styles{
    <style>


        .checkmark {
            width: 52px;
            height: 52px;
            border-radius: 50%;
            stroke-width: 2;
            stroke: #28a745;
            fill: none;
            transition: stroke-dashoffset 5s ease-in-out;
        }

        .checkmark-circle {
            stroke-dasharray: 166;
            stroke-dashoffset: 166;
        }

        .checkmark-check {
            stroke-dasharray: 48;
            stroke-dashoffset: 48;
        }

        .checkmark-animate .checkmark-circle {
            stroke-dashoffset: 0;
        }

        .checkmark-animate .checkmark-check {
            stroke-dashoffset: 0;
        }
    </style>
}

<body>
    <br />
    <div id="app" class="container">
        <div class="row justify-content-center mt-5">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body text-center">
                        <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                            <circle class="checkmark-circle" cx="26" cy="26" r="25" fill="none" />
                            <path class="checkmark-check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
                        </svg>
                        <h4 class="mt-3">訂單完成</h4>
                        <div class="mt-4">
                            <a asp-controller="Home" asp-action="Index" class="btn btn-primary">回到首頁</a>
                            <a asp-controller="Member" asp-action="Index" class="btn btn-secondary">訂單管理頁面</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
</body>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var checkmark = document.querySelector('.checkmark');
            checkmark.classList.add('checkmark-animate');
        });
        var result = '@ViewBag.TradeInfo';
        var app = new Vue({
            el: '#app',
            data: {
                result: result,
                objData: []
            },
            mounted: function () {
                this.decodeObjectValues(result);
                this.upDatePayStatus();
            },
            computed: {
            },
            methods: {
                decodeObjectValues: function (result) {
                    var returnObj = result.replace(/&quot;/g, '"');
                    var final = JSON.parse(returnObj);
                    for (let key in final) {
                        if (typeof final[key] === 'string') {
                            const encodedString = final[key];
                            const parser = new DOMParser();
                            const dom = parser.parseFromString(`<dummy>${encodedString}</dummy>`, "text/html");
                            const decodedString = dom.documentElement.textContent;
                            final[key] = decodedString;
                        } else if (typeof final[key] === 'object') {
                            decodeObjectValues(final[key]); // 遞迴處理物件內的物件
                        }
                    }
                    this.objData = final;
                },
                upDatePayStatus: function () {
                    // 設定要更新的訂單 ID 和付款狀態
                    const orderNo = this.objData.MerchantOrderNo; // 替換為實際的訂單流水號。
                    const newPaymentStatus = true; // 替換為要設定的新付款狀態
                    const data = {
                        orderNo: orderNo,
                        paymentStatus: newPaymentStatus
                    };
                    // 發送更新訂單的付款狀態的請求
                    if (this.objData.Status == "SUCCESS") {
                        axios.put(`/api/PetProductAPI/UpdateOrderPaymentStatus/${orderNo}`, data)
                            .then(response => {
                                console.log('訂單付款狀態已成功更新');
                                // 在這裡處理成功更新的回應
                            })
                            .catch(error => {
                                console.error('更新訂單付款狀態時發生錯誤:', error);
                                // 在這裡處理錯誤
                            });
                    }
                },
            }
        })

    </script>
}